# Création et activation d’un environnement virtuel (venv)
# Sur Windows

    python -m venv venv

# Activer l’environnement

    venv\Scripts\activate

# Vérifier que tu es dans le venv

    where python


------------------------------------------------------------


# Sur Linux / MacOS
# Création et activation d’un environnement virtuel (venv)

    python3 -m venv venv

 # Activer l’environnement

    source venv/bin/activate

# Vérifier que tu es dans le venv
    which python


------------------------------------------------------------


# Installation des dépendances une fois le venv activé :
## Sur Windows

### 1. Méthode standard (recommandée)
```bash
pip install -r requirements.txt

### 2. Méthode alternative (package par package)
```bash
cat requirements.txt | xargs -n 1 pip install



pip freeze > requirements.txt


------------------------------------------------------------


## Sur Linux/MacOS

### 1. Méthode standard (recommandée)
```bash
pip install -r requirements.txt


### 2. Méthode alternative (package par package)
```bash
cat requirements.txt | xargs -n 1 pip3 install


pip freeze > requirements.txt
pip3 freeze > requirements.txt


------------------------------------------------------------

# Lancer l'application 
### 1. Méthode standard (recommandée)
```bash
python app.py

### 2. Méthode alternative (package par package)
```bash
python3 app.py


------------------------------------------------------------

# Migrate data into databasee
#### 1. Méthode standard (package par package recommandée)
    ```` bash
    flask db init
    flask db migrate -m "Message de migration"
    flask db upgrade


#### 2. Méthode alternative (exécuter commande par commande si besoin)
    ```` bash
    python -m flask db init
    python -m flask db migrate -m "Message de migration"
    python -m flask db upgrade



------------------------------------------------------------


# Désactivation du venv :
## Sur Windows
```bash
deactivate

## Sur Linux / MacOS
```bash
deactivate